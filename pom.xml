<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.selenium.test</groupId>
    <artifactId>selenium-assessment</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <cucumber.version>3.0.2</cucumber.version>
        <selenium.version>3.141.59</selenium.version>
        <junit.version>4.12</junit.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-core</artifactId>
            <version>${cucumber.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-picocontainer</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.11.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.11.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-iostreams</artifactId>
            <version>2.11.1</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.37.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <profiles>
    <profile>
    <id>selenium</id>
    <activation>
        <activeByDefault>true</activeByDefault>
    </activation>
    <build>
    <plugins>

    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
            <skipTests>true</skipTests>
        </configuration>
    </plugin>

    <plugin>
        <groupId>net.masterthought</groupId>
        <artifactId>maven-cucumber-reporting</artifactId>
        <version>3.11.0</version>
        <executions>
            <execution>
                <id>execution</id>
                <phase>verify</phase>
                <goals>
                    <goal>generate</goal>
                </goals>
                <configuration>
                    <projectName>CucumberReport</projectName>
                    <outputDirectory>${project.build.directory}/site/cucumber-reports</outputDirectory>
                    <!-- <cucumberOutput>${project.build.directory}/cucumber.json</cucumberOutput> -->
                    <jsonFiles>
                        <param>${project.build.directory}/cucumber.json</param>
                    </jsonFiles>
                    <!-- <parallelTesting>false</parallelTesting> -->
                    <buildNumber>1</buildNumber>
                    <checkBuildResult>false</checkBuildResult>
                </configuration>
            </execution>
        </executions>
    </plugin>

    <plugin>
        <groupId>com.github.temyers</groupId>
        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
        <version>5.0.0</version>
        <executions>
            <execution>
                <id>generateRunners</id>
                <phase>generate-test-sources</phase>
                <goals>
                    <goal>generateRunners</goal>
                </goals>
                <configuration>
                    <!-- Mandatory -->
                    <!-- List of package names to scan for glue code. -->
                    <glue>
                        <package>stepdefs.${project}</package>
                        <package>selenium</package>
                    </glue>
                    <!-- These are optional, with the default values -->
                    <!-- Where to output the generated tests -->
                    <outputDirectory>${project.build.directory}/generated-test-sources/cucumber
                    </outputDirectory>
                    <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
                    <featuresDirectory>src/test/resources/features</featuresDirectory>
                    <!-- Directory where the cucumber report files shall be written  -->
                    <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
                    <!-- List of cucumber plugins. When none are provided the json formatter is used. For more
                         advanced usage see section about configuring cucumber plugins -->
                    <plugins>
                        <plugin>
                            <name>json</name>
                        </plugin>
                    </plugins>
                    <!-- CucumberOptions.strict property -->
                    <strict>true</strict>
                    <!-- CucumberOptions.monochrome property -->
                    <monochrome>true</monochrome>
                    <!-- The tags to run, maps to CucumberOptions.tags property. Default is no tags. -->
                    <tags>
                        <tag>${tags}</tag>
                    </tags>
                    <!-- Generate TestNG runners instead of JUnit ones. -->
                    <useTestNG>false</useTestNG>
                    <!-- The naming scheme to use for the generated test classes.  One of ['simple', 'feature-title', 'pattern'] -->
                    <namingScheme>feature-title</namingScheme>
                    <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
                    <!--<namingPattern>Parallel{c}IT</namingPattern>-->
                    <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
                    <parallelScheme>SCENARIO</parallelScheme>
                    <!-- Specify a custom template for the generated sources (this is a path relative to the project base directory) -->
                    <customVmTemplate>src/test/resources/cucumber-runner-template.vm</customVmTemplate>
                    <!-- Specify a custom package name for generated sources. Default is no package.-->
                    <!--<packageName>com.example</packageName>-->
                </configuration>
            </execution>
        </executions>
    </plugin>
    </plugins>
    </build>
    </profile>
    </profiles>

</project>